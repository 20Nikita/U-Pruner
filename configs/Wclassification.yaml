####################### PRUNING SETTINGS ############################
path:
    exp_save: snp           # Путь к каталогу для сохранения промежуточных результатов, мусора, хэша
    modelName: MobileNetV2     # Название эксперимента
####################### compatibility ############################
# class_name: ['timm.layers.norm_act']
class_name:
#====================== MODEL ==================================|
model:
    type_save_load: pth # interface - загрузка и сохранение в интерфейс, pth - загрузка модели и сохранение в формате pth.
    path_to_resurs: models # Путь к каталогу с interface.pt если type_save_load = interface. К model.pth если type_save_load = pth
    name_resurs: mobilenetv2_100 # Имя файла с расширением .pth
    size: [224,224]
    gpu: 9 # карта для main процесса прунинга
    anchors:
    feature_maps_w:
    feature_maps_h:
    aspect_ratios:
task:
    type: classification # classification, segmentation, detection, special points
    detection:

mask:
    type:  mask # mask or None
    sours_mask: None # list связвнных компонент или None

#====================== DATASET ================================|
dataset:
    num_classes: 10
    annotation_path: D:/db/ImageNette_10
    annotation_name: data.csv
    annotation_name_train:
    annotation_name_val:

#===================== RETRAINING ==============================|
# Используется только в My_pruning
# Параметры дообучения сети после обрезки.
# Вызывается количество_итераций_обрезки * Количество_блоков_сети раз
retraining:
    num_epochs: 1
    lr: 0.00001
    dataLoader:
        batch_size_t: 10
        num_workers_t: 4
        pin_memory_t: True
        drop_last_t: True
        shuffle_t: True

        batch_size_v: 10
        num_workers_v: 4
        pin_memory_v: True
        drop_last_v: True
        shuffle_v: False
#====================== TRAINING ===============================|
# Полноценное обучение (дообучение) после обрезки.
# Вызывается 1 раз в конце работы алгоритма
training:
    num_epochs: 1
    lr: 0.00001
    dataLoader:
        batch_size_t: 80
        num_workers_t: 4
        pin_memory_t: True
        drop_last_t: True
        shuffle_t: True

        batch_size_v: 80
        num_workers_v: 4
        pin_memory_v: True
        drop_last_v: True
        shuffle_v: False
#===================== ALGORITHM ===============================|
algorithm: My_pruning             # Алгоритм прунинга (My_pruning, AGP, Linear, LotteryTicket, TaylorFOWeight, ActivationMeanRank, FPGM, L2Norm)
#===================== MY_PRUNING ==============================|
my_pruning:
    alf: 32                       # Сохоанить кратность первых двух коналов конволюции числу alf (33*65*7*7)->(32*64*7*7)
    P: 0.999                      # Сколько отрезать от сети (Пока основывается на ptflops.get_model_complexity_info)
    cart: [0,0]                   # На каких картах обучать [0,0,1,1,1,2] (для паралельного обучения, запустится 6 независимых тренировок на соответствующих картах)
    iskl: []                      # Название слоёв, которые не нужно обрезать [input_stem.0.conv,blocks.1.conv2.conv]
    algoritm: TaylorFOWeight      # TaylorFOWeight, L2Norm. Прунинг в основе.TaylorFOWeight в 2 раза дольще L2Norm но немного лучше.
    resize_alf: False             # Обрезать всю сеть до кратности alf (Если False то могут остатся не кратные свертки при условии что их обрезка сильно портит качество)
    delta_crop: 0.1               # Сколько % от текущей свертки резать за 1 итерацию 0.1->(100*100*7*7)->(90->100*7*7)
    restart:
        start_iteration: 0                                      # Итерация с которой продолжить работу (default: 0)
        load: snp/MobileNetV2/orig_model.pth  # Путь к модели (default: exp_save + "/" + model_name + "/" + "orig_model.pth")
#==================== nni_pruning ==============================|
nni_pruning:
    P: 0.5                         # Сколько отрезать от сети (Пока основывается на ptflops.get_model_complexity_info)
    training: True                 # Дообучить после обрезки
    total_iteration: 10            # Итерации обрезки, спользуется в алгоритмах AGP, Linear, LotteryTicket.
    gpu: 9                         # Карта для обучения
